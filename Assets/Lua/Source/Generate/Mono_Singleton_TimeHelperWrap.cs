//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Mono_Singleton_TimeHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Mono_Singleton<TimeHelper>), typeof(UnityEngine.MonoBehaviour), "Mono_Singleton_TimeHelper");
		L.RegFunction("GetInstanceWithOutCreate", GetInstanceWithOutCreate);
		L.RegFunction("OnDestroy", OnDestroy);
		L.RegFunction("OnApplicationQuit", OnApplicationQuit);
		L.RegFunction("Awake", Awake);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_ApplicationIsQuitting", get_m_ApplicationIsQuitting, null);
		L.RegVar("Instance", get_Instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInstanceWithOutCreate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			TimeHelper o = Mono_Singleton<TimeHelper>.GetInstanceWithOutCreate();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Mono_Singleton<TimeHelper> obj = (Mono_Singleton<TimeHelper>)ToLua.CheckObject(L, 1, typeof(Mono_Singleton<TimeHelper>));
			obj.OnDestroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnApplicationQuit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Mono_Singleton<TimeHelper> obj = (Mono_Singleton<TimeHelper>)ToLua.CheckObject(L, 1, typeof(Mono_Singleton<TimeHelper>));
			obj.OnApplicationQuit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Awake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Mono_Singleton<TimeHelper> obj = (Mono_Singleton<TimeHelper>)ToLua.CheckObject(L, 1, typeof(Mono_Singleton<TimeHelper>));
			obj.Awake();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_ApplicationIsQuitting(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Mono_Singleton<TimeHelper>.m_ApplicationIsQuitting);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Mono_Singleton<TimeHelper>.Instance);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

