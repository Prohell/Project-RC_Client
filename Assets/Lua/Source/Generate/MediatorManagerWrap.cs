//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MediatorManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MediatorManager), typeof(Singleton<MediatorManager>));
		L.RegFunction("Add", Add);
		L.RegFunction("Remove", Remove);
		L.RegFunction("Get", Get);
		L.RegFunction("OnDestroy", OnDestroy);
		L.RegFunction("OnReset", OnReset);
		L.RegFunction("New", _CreateMediatorManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMediatorManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				MediatorManager obj = new MediatorManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MediatorManager.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Add(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MediatorManager obj = (MediatorManager)ToLua.CheckObject(L, 1, typeof(MediatorManager));
			IMediator arg0 = (IMediator)ToLua.CheckObject(L, 2, typeof(IMediator));
			obj.Add(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Remove(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MediatorManager obj = (MediatorManager)ToLua.CheckObject(L, 1, typeof(MediatorManager));
			System.Type arg0 = (System.Type)ToLua.CheckObject(L, 2, typeof(System.Type));
			obj.Remove(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Get(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MediatorManager obj = (MediatorManager)ToLua.CheckObject(L, 1, typeof(MediatorManager));
			string arg0 = ToLua.CheckString(L, 2);
			object o = obj.Get(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MediatorManager obj = (MediatorManager)ToLua.CheckObject(L, 1, typeof(MediatorManager));
			obj.OnDestroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnReset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MediatorManager obj = (MediatorManager)ToLua.CheckObject(L, 1, typeof(MediatorManager));
			obj.OnReset();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

